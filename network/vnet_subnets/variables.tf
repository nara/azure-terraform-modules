variable "org_key" {
  description = "The organization 3 letter word"
  type        = string
}

variable "org_email_domain" {
  description = "The organization domain (e.g. example.com )"
  type        = string
}

variable "line_of_business_key" {
  description = "A 3 letter word for line of business that is unique in org"
  type        = string
}

variable "team_key" {
  description = "Opitonal. A 3 letter word for team managing the resources in this project"
  type        = string
  default = ""
}

variable "host_or_service_proj" {
  description = "Is this a host or service project. Accepted values host or svc"
  type        = string
  default = "host"
}

variable "app_key" {
  description = "A 3 letter app key that is unique in org"
  type        = string
}

variable "environment" {
  description = "environment value."
  type        = string
  default = "dev"
}

variable "location_short" {
  description = "Azure location short form"
  type        = string
}

variable "resource_group_name" {
  type        = string
  description = "Name of the resource group to be imported."
  default = ""
}

variable "vnet_location" {
  type        = string
  description = "The location of the vnet to create."
  nullable    = false
}

variable "address_space" {
  type        = list(string)
  description = "The address space that is used by the virtual network."
}

variable "bgp_community" {
  type        = string
  default     = null
  description = "(Optional) The BGP community attribute in format `<as-number>:<community-value>`."
}

variable "ddos_protection_plan" {
  type = object({
    enable = bool
    id     = string
  })
  default     = null
  description = "The set of DDoS protection plan configuration"
}

# If no values specified, this defaults to Azure DNS
variable "dns_servers" {
  type        = list(string)
  default     = []
  description = "The DNS servers to be used with vNet."
}

variable "nsg_ids" {
  type = map(string)
  default = {
  }
  description = "A map of subnet name to Network Security Group IDs"
}

variable "route_tables_ids" {
  type        = map(string)
  default     = {}
  description = "A map of subnet name to Route table ids"
}

variable "subnet_delegation" {
  type        = map(map(any))
  default     = {}
  description = "A map of subnet name to delegation block on the subnet"
}

variable "subnet_enforce_private_link_endpoint_network_policies" {
  type        = map(bool)
  default     = {}
  description = "A map of subnet name to enable/disable private link endpoint network policies on the subnet."
}

variable "subnet_enforce_private_link_service_network_policies" {
  type        = map(bool)
  default     = {}
  description = "A map of subnet name to enable/disable private link service network policies on the subnet."
}

variable "automatic_subnet_config" {
  description = "The enterprise subnet configuration. Required if subnets variable is not specified."
  type = list(object({
    subnet_postfix = string
    subnet_type = string,
    vnet_address_space_index = number,
    cidr_range = number,
    subnet_count = number,
    service_endpoints = list(string)
    subnet_delegation = list(object({
      name = string,
      service_name = string,
      service_actions = list(string)
    }))
  }))
  default = []
}

variable "manual_subnets" {
  type        = list(object({
    subnet_postfix = string
    subnet_type = string,
    prefix = string,
    service_endpoints = list(string)
    subnet_delegation = list(object({
      name = string,
      service_name = string,
      service_actions = list(string)
    }))
  }))
  default     = []
  description = "The subnets to create in the vnet.  Subnet type can be one of Case Sensitive values (enterprise, private, public, dmz, centralingress, centralegress)"
}

variable "subnet_service_endpoints" {
  type        = map(any)
  default     = {}
  description = "A map of subnet name to service endpoints to add to the subnet."
}

variable "tags" {
  type = map(string)
  default = {
    ENV = "test"
  }
  description = "The tags to associate with your network and subnets."
}

# tflint-ignore: terraform_unused_declarations
variable "tracing_tags_enabled" {
  type        = bool
  default     = false
  description = "Whether enable tracing tags that generated by BridgeCrew Yor."
  nullable    = false
}

# tflint-ignore: terraform_unused_declarations
variable "tracing_tags_prefix" {
  type        = string
  default     = "avm_"
  description = "Default prefix for generated tracing tags"
  nullable    = false
}

variable "vnet_postfix" {
  type        = string
  default     = ""
  description = "Postfix for vnet to append to the standard name"
}
